{"ast":null,"code":"var _jsxFileName = \"/Users/fanpeng/MyProject/samplebook-ts/src/common/header/index.tsx\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport { Link } from 'react-router-dom';\nimport { actionCreators } from './store/index';\nimport { HeaderWrapper, Logo, Nav, NavItem, NavSearch, Addition, Button, SearchWrapper, SearchInfo, SearchInfoItem, SearchInfoList } from './style';\n\nclass Header extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getListArea = (show, list, handleMouseEnter, mouseIn, handleMouseLeave, switchList) => {\n      if (show || mouseIn) {\n        return React.createElement(SearchInfo, {\n          onMouseEnter: handleMouseEnter,\n          onMouseLeave: handleMouseLeave,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(SearchInfoList, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, list.map((item, index) => {\n          return React.createElement(SearchInfoItem, {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, item);\n        })));\n      }\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          logout = _this$props.logout,\n          login = _this$props.login,\n          mouseIn = _this$props.mouseIn,\n          focused = _this$props.focused,\n          handleInputFocus = _this$props.handleInputFocus,\n          handleInputBlur = _this$props.handleInputBlur,\n          list = _this$props.list,\n          page = _this$props.page,\n          handleMouseEnter = _this$props.handleMouseEnter,\n          handleMouseLeave = _this$props.handleMouseLeave,\n          switchList = _this$props.switchList;\n    let pageList = [];\n\n    for (let i = page * 10; i < (page + 1) * 10; i++) {\n      pageList.push(list[i]);\n    }\n\n    return React.createElement(HeaderWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Logo\n    /*href = \"/\"*/\n    , {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      className: \"left active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"\\u9996\\u9875\"), React.createElement(NavItem, {\n      className: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"\\u4E0B\\u8F7DApp\"), login ? React.createElement(NavItem, {\n      onClick: logout,\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"\\u9000\\u51FA\") : React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(NavItem, {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"\\u767B\\u9646\")), React.createElement(NavItem, {\n      className: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"iconfont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"\\uE636\")), React.createElement(SearchWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(CSSTransition, {\n      in: focused,\n      timeout: 200,\n      classNames: \"slide\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(NavSearch, {\n      onFocus: () => handleInputFocus(list),\n      onBlur: handleInputBlur,\n      className: focused ? 'focused' : '',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"i\", {\n      className: focused ? 'focused iconfont zoom' : 'iconfont zoom',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"\\uE795\"), this.getListArea(focused, pageList, handleMouseEnter, mouseIn, handleMouseLeave, switchList)), React.createElement(Addition, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"reg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"\\u6CE8\\u518C\"), React.createElement(Link, {\n      to: \"/write\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"writter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"iconfont\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"\\uE607\"), \"\\u5199\\u6587\\u7AE0\")))));\n  }\n\n}\n\nconst mapState = state => {\n  return {\n    // focused: state.get('header').get('focused')\n    focused: state.getIn(['header', 'focused']),\n    list: state.getIn(['header', 'list']),\n    page: state.getIn(['header', 'page']),\n    totalPage: state.getIn(['header', 'totalPage']),\n    mouseIn: state.getIn(['header', 'mouseIn']),\n    login: state.getIn(['login', 'login'])\n  };\n};\n\nconst mapDispatch = dispatch => {\n  return {\n    // logout() {\n    //     dispatch(loginActionCreators.changeLogin(false))\n    // },\n    handleInputFocus(list) {\n      if (list.size === 0) {\n        dispatch(actionCreators.getList());\n      }\n\n      const action = actionCreators.searchFocus();\n      dispatch(action);\n    },\n\n    handleInputBlur() {\n      const action = actionCreators.searchBlur();\n      dispatch(action);\n    },\n\n    handleMouseEnter() {\n      const action = actionCreators.mouseEnter();\n      dispatch(action);\n    },\n\n    handleMouseLeave() {\n      const action = actionCreators.mouseLeave();\n      dispatch(action);\n    },\n\n    switchList(spinIcon) {\n      let rotate = parseInt(spinIcon.style.transform.replace(/[^0-9]/ig, ''));\n\n      if (!rotate) {\n        rotate = 0;\n      }\n\n      spinIcon.style.transform = 'rotate(' + (rotate + 360) + 'deg)';\n      const action = actionCreators.switchList();\n      dispatch(action);\n    }\n\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Header);","map":{"version":3,"sources":["/Users/fanpeng/MyProject/samplebook-ts/src/common/header/index.tsx"],"names":["React","connect","CSSTransition","Link","actionCreators","HeaderWrapper","Logo","Nav","NavItem","NavSearch","Addition","Button","SearchWrapper","SearchInfo","SearchInfoItem","SearchInfoList","Header","Component","getListArea","show","list","handleMouseEnter","mouseIn","handleMouseLeave","switchList","map","item","index","render","props","logout","login","focused","handleInputFocus","handleInputBlur","page","pageList","i","push","mapState","state","getIn","totalPage","mapDispatch","dispatch","size","getList","action","searchFocus","searchBlur","mouseEnter","mouseLeave","spinIcon","rotate","parseInt","style","transform","replace"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {connect} from 'react-redux';\nimport {CSSTransition} from 'react-transition-group';\nimport {Link} from 'react-router-dom';\nimport {actionCreators} from './store/index';\nimport {\n    HeaderWrapper,\n    Logo,\n    Nav,\n    NavItem,\n    NavSearch,\n    Addition,\n    Button,\n    SearchWrapper,\n    SearchInfo,\n    SearchInfoTitle,\n    SearchInfoSwitch,\n    SearchInfoItem,\n    SearchInfoList\n} from './style';\n\ninterface IProps {\n    focused: boolean,\n    list: [],\n    page: number,\n    totalPage: number,\n    mouseIn: boolean,\n    login: boolean,\n    logout?: any,\n    handleInputFocus: any,\n    handleInputBlur: any,\n    handleMouseEnter: any,\n    handleMouseLeave: any,\n    switchList: any\n  }\n  interface IState {\n    focused: boolean,\n    list: [],\n    page: number,\n    totalPage: number,\n    mouseIn: boolean,\n    login: boolean\n  }\n  \n\nclass Header extends React.Component<IProps, IState> {\n    getListArea = (show: boolean, list: [], handleMouseEnter: any, mouseIn: boolean, handleMouseLeave: any, switchList: any) => {\n        if (show || mouseIn) {\n            return (\n                <SearchInfo onMouseEnter = {handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n                >\n                    {/* <SearchInfoTitle>热门搜索\n                        <SearchInfoSwitch\n                        onClick = {() => switchList(this.spinIcon)}\n                        >\n                            <i ref = {(icon) => {\n                                this.spinIcon = icon\n                            }} className = 'iconfont spin'>&#xe862;</i>\n                            换一换</SearchInfoSwitch>\n                    </SearchInfoTitle> */}\n                    <SearchInfoList>\n                        {list.map((item,index) => {\n                            return (<SearchInfoItem key = {index}>{item}</SearchInfoItem>)\n                        })}\n                    </SearchInfoList>\n                </SearchInfo>\n            )\n        }\n    }\n\n    render() {\n        const {logout, login, mouseIn, focused, handleInputFocus, handleInputBlur, list, page, handleMouseEnter, handleMouseLeave, switchList} = this.props;\n        let pageList: [] = [];\n        for (let i = page * 10; i < (page + 1) * 10; i ++) {\n            pageList.push(list[i]);\n        }\n        return (\n            <HeaderWrapper>\n                <Link to = '/'>\n                <Logo /*href = \"/\"*/></Logo>\n                </Link>\n                <Nav>\n                    <NavItem className = 'left active'>首页</NavItem>\n                    <NavItem className = 'left'>下载App</NavItem>\n                    {login ? <NavItem \n                    onClick = {logout}\n                    className = 'right'>退出</NavItem> : \n                    <Link to = '/login'>\n                        <NavItem className = 'right'>登陆</NavItem>\n                    </Link>}\n                    <NavItem className = 'right'>\n                        <i className = 'iconfont'>&#xe636;</i>\n                    </NavItem>\n                    <SearchWrapper>\n                        <CSSTransition\n                        in = {focused}\n                        timeout = {200}\n                        classNames = 'slide'\n                        >\n                            <NavSearch\n                            onFocus = {() => handleInputFocus(list)}\n                            onBlur = {handleInputBlur}\n                            className = {focused ? 'focused' : ''} \n                            ></NavSearch>\n                        </CSSTransition>\n                        <i \n                        className = {focused ? 'focused iconfont zoom' : 'iconfont zoom'} \n                        >&#xe795;</i>\n                        {this.getListArea(focused, pageList, handleMouseEnter, mouseIn, handleMouseLeave, switchList)}\n                    </SearchWrapper>\n                    <Addition>\n                        <Button className = 'reg'>注册</Button>\n                        <Link to = '/write'>\n                            <Button className = 'writter'>\n                            <i className = 'iconfont'>&#xe607;</i>\n                                写文章</Button>\n                            </Link>\n                    </Addition>\n                </Nav>\n            </HeaderWrapper>\n        )\n    }\n}\n\nconst mapState = (state: any) => {\n    return {\n        // focused: state.get('header').get('focused')\n        focused: state.getIn(['header', 'focused']),\n        list: state.getIn(['header', 'list']),\n        page: state.getIn(['header', 'page']),\n        totalPage: state.getIn(['header', 'totalPage']),\n        mouseIn: state.getIn(['header', 'mouseIn']),\n        login: state.getIn(['login', 'login'])\n    }\n}\n\nconst mapDispatch = (dispatch: any) => {\n    return {\n        // logout() {\n        //     dispatch(loginActionCreators.changeLogin(false))\n        // },\n        handleInputFocus(list: any) {\n            if (list.size === 0) {\n                dispatch(actionCreators.getList());\n            }\n            const action = actionCreators.searchFocus();\n            dispatch(action);\n        },\n        handleInputBlur() {\n            const action = actionCreators.searchBlur();\n            dispatch(action);\n        },\n        handleMouseEnter() {\n            const action = actionCreators.mouseEnter();\n            dispatch(action);\n        },\n        handleMouseLeave() {\n            const action = actionCreators.mouseLeave();\n            dispatch(action);\n        },\n        switchList(spinIcon: any) {\n            let rotate = parseInt(spinIcon.style.transform.replace(/[^0-9]/ig, ''));\n            if (!rotate) {\n                rotate = 0;\n            }\n            spinIcon.style.transform = 'rotate(' + (rotate + 360) + 'deg)';\n            const action = actionCreators.switchList();\n            dispatch(action);\n        }\n    }\n}\n\nexport default connect(mapState, mapDispatch)(Header);"]},"metadata":{},"sourceType":"module"}